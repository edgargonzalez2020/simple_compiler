Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> block_stmt
Rule 2     block_stmt -> LBRACE stmt_decl_list RBRACE
Rule 3     stmt_decl_list -> epsilon
Rule 4     stmt_decl_list -> stmt_decl_list_more stmt_decl semicolon_opt
Rule 5     stmt_decl_list_more -> epsilon
Rule 6     stmt_decl_list_more -> stmt_decl_list_more stmt_decl SEMICOLON
Rule 7     stmt_decl -> stmt
Rule 8     stmt_decl -> decleration
Rule 9     semicolon_opt -> epsilon
Rule 10    semicolon_opt -> SEMICOLON
Rule 11    decleration -> identifier COLON type assignment_opt
Rule 12    type -> INT
Rule 13    identifier -> ID
Rule 14    lvalue -> identifier
Rule 15    expression -> expression PLUS expression
Rule 16    expression -> expression MINUS expression
Rule 17    expression -> expression DIVIDE expression
Rule 18    expression -> expression MODULUS expression
Rule 19    expression -> expression TIMES expression
Rule 20    expression -> expression POWER expression
Rule 21    expression -> expression LT expression
Rule 22    expression -> expression LTE expression
Rule 23    expression -> expression GT expression
Rule 24    expression -> expression GTE expression
Rule 25    expression -> expression AND expression
Rule 26    expression -> expression OR expression
Rule 27    expression -> expression EQUALS expression
Rule 28    expression -> expression NE expression
Rule 29    expression -> lvalue ASSIGN expression
Rule 30    expression -> MINUS expression
Rule 31    expression -> PLUS expression
Rule 32    expression -> NOT expression
Rule 33    expression -> LPAREN expression RPAREN
Rule 34    literal -> STRING_LITERAL
Rule 35    literal -> INT_LITERAL
Rule 36    expression -> literal
Rule 37    expression -> lvalue
Rule 38    assignment_opt -> epsilon
Rule 39    assignment_opt -> ASSIGN expression
Rule 40    expr_stmt -> expression
Rule 41    stmt -> block_stmt
Rule 42    stmt -> expr_stmt
Rule 43    stmt -> if_stmt
Rule 44    stmt -> read_stmt
Rule 45    stmt -> while_stmt
Rule 46    stmt -> write_stmt
Rule 47    if_stmt -> IF expression block_stmt else_opt
Rule 48    else_opt -> epsilon
Rule 49    else_opt -> ELSE block_stmt
Rule 50    read_stmt -> READ LPAREN lvalue_list RPAREN
Rule 51    lvalue_list -> lvalue_more lvalue
Rule 52    lvalue_more -> epsilon
Rule 53    lvalue_more -> lvalue_more lvalue COMMA
Rule 54    while_stmt -> WHILE expression block_stmt
Rule 55    write_stmt -> WRITE LPAREN expr_string_list RPAREN
Rule 56    expr_string_list -> epsilon
Rule 57    expr_string_list -> expr_string_more expression
Rule 58    expr_string_more -> epsilon
Rule 59    expr_string_more -> expr_string_more expression COMMA
Rule 60    epsilon -> <empty>

Terminals, with rules where they appear

AND                  : 25
ASSIGN               : 29 39
COLON                : 11
COMMA                : 53 59
DIVIDE               : 17
ELSE                 : 49
EQUALS               : 27
GT                   : 23
GTE                  : 24
ID                   : 13
IF                   : 47
INT                  : 12
INT_LITERAL          : 35
LBRACE               : 2
LPAREN               : 33 50 55
LT                   : 21
LTE                  : 22
MINUS                : 16 30
MODULUS              : 18
NE                   : 28
NOT                  : 32
OR                   : 26
PLUS                 : 15 31
POWER                : 20
RBRACE               : 2
READ                 : 50
RPAREN               : 33 50 55
SEMICOLON            : 6 10
STRING_LITERAL       : 34
TIMES                : 19
WHILE                : 54
WRITE                : 55
error                : 

Nonterminals, with rules where they appear

assignment_opt       : 11
block_stmt           : 1 41 47 49 54
decleration          : 8
else_opt             : 47
epsilon              : 3 5 9 38 48 52 56 58
expr_stmt            : 42
expr_string_list     : 55
expr_string_more     : 57 59
expression           : 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 30 31 32 33 39 40 47 54 57 59
identifier           : 11 14
if_stmt              : 43
literal              : 36
lvalue               : 29 37 51 53
lvalue_list          : 50
lvalue_more          : 51 53
program              : 0
read_stmt            : 44
semicolon_opt        : 4
stmt                 : 7
stmt_decl            : 4 6
stmt_decl_list       : 2
stmt_decl_list_more  : 4 6
type                 : 11
while_stmt           : 45
write_stmt           : 46

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . block_stmt
    (2) block_stmt -> . LBRACE stmt_decl_list RBRACE

    LBRACE          shift and go to state 3

    program                        shift and go to state 1
    block_stmt                     shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> block_stmt .

    $end            reduce using rule 1 (program -> block_stmt .)


state 3

    (2) block_stmt -> LBRACE . stmt_decl_list RBRACE
    (3) stmt_decl_list -> . epsilon
    (4) stmt_decl_list -> . stmt_decl_list_more stmt_decl semicolon_opt
    (60) epsilon -> .
    (5) stmt_decl_list_more -> . epsilon
    (6) stmt_decl_list_more -> . stmt_decl_list_more stmt_decl SEMICOLON

    RBRACE          reduce using rule 60 (epsilon -> .)
    LBRACE          reduce using rule 60 (epsilon -> .)
    IF              reduce using rule 60 (epsilon -> .)
    READ            reduce using rule 60 (epsilon -> .)
    WHILE           reduce using rule 60 (epsilon -> .)
    WRITE           reduce using rule 60 (epsilon -> .)
    ID              reduce using rule 60 (epsilon -> .)
    MINUS           reduce using rule 60 (epsilon -> .)
    PLUS            reduce using rule 60 (epsilon -> .)
    NOT             reduce using rule 60 (epsilon -> .)
    LPAREN          reduce using rule 60 (epsilon -> .)
    STRING_LITERAL  reduce using rule 60 (epsilon -> .)
    INT_LITERAL     reduce using rule 60 (epsilon -> .)

    stmt_decl_list                 shift and go to state 4
    epsilon                        shift and go to state 5
    stmt_decl_list_more            shift and go to state 6

state 4

    (2) block_stmt -> LBRACE stmt_decl_list . RBRACE

    RBRACE          shift and go to state 7


state 5

    (3) stmt_decl_list -> epsilon .
    (5) stmt_decl_list_more -> epsilon .

    RBRACE          reduce using rule 3 (stmt_decl_list -> epsilon .)
    LBRACE          reduce using rule 5 (stmt_decl_list_more -> epsilon .)
    IF              reduce using rule 5 (stmt_decl_list_more -> epsilon .)
    READ            reduce using rule 5 (stmt_decl_list_more -> epsilon .)
    WHILE           reduce using rule 5 (stmt_decl_list_more -> epsilon .)
    WRITE           reduce using rule 5 (stmt_decl_list_more -> epsilon .)
    ID              reduce using rule 5 (stmt_decl_list_more -> epsilon .)
    MINUS           reduce using rule 5 (stmt_decl_list_more -> epsilon .)
    PLUS            reduce using rule 5 (stmt_decl_list_more -> epsilon .)
    NOT             reduce using rule 5 (stmt_decl_list_more -> epsilon .)
    LPAREN          reduce using rule 5 (stmt_decl_list_more -> epsilon .)
    STRING_LITERAL  reduce using rule 5 (stmt_decl_list_more -> epsilon .)
    INT_LITERAL     reduce using rule 5 (stmt_decl_list_more -> epsilon .)


state 6

    (4) stmt_decl_list -> stmt_decl_list_more . stmt_decl semicolon_opt
    (6) stmt_decl_list_more -> stmt_decl_list_more . stmt_decl SEMICOLON
    (7) stmt_decl -> . stmt
    (8) stmt_decl -> . decleration
    (41) stmt -> . block_stmt
    (42) stmt -> . expr_stmt
    (43) stmt -> . if_stmt
    (44) stmt -> . read_stmt
    (45) stmt -> . while_stmt
    (46) stmt -> . write_stmt
    (11) decleration -> . identifier COLON type assignment_opt
    (2) block_stmt -> . LBRACE stmt_decl_list RBRACE
    (40) expr_stmt -> . expression
    (47) if_stmt -> . IF expression block_stmt else_opt
    (50) read_stmt -> . READ LPAREN lvalue_list RPAREN
    (54) while_stmt -> . WHILE expression block_stmt
    (55) write_stmt -> . WRITE LPAREN expr_string_list RPAREN
    (13) identifier -> . ID
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression POWER expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LTE expression
    (23) expression -> . expression GT expression
    (24) expression -> . expression GTE expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression EQUALS expression
    (28) expression -> . expression NE expression
    (29) expression -> . lvalue ASSIGN expression
    (30) expression -> . MINUS expression
    (31) expression -> . PLUS expression
    (32) expression -> . NOT expression
    (33) expression -> . LPAREN expression RPAREN
    (36) expression -> . literal
    (37) expression -> . lvalue
    (14) lvalue -> . identifier
    (34) literal -> . STRING_LITERAL
    (35) literal -> . INT_LITERAL

    LBRACE          shift and go to state 3
    IF              shift and go to state 19
    READ            shift and go to state 20
    WHILE           shift and go to state 22
    WRITE           shift and go to state 23
    ID              shift and go to state 24
    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    NOT             shift and go to state 28
    LPAREN          shift and go to state 21
    STRING_LITERAL  shift and go to state 30
    INT_LITERAL     shift and go to state 31

    stmt_decl                      shift and go to state 8
    stmt                           shift and go to state 9
    decleration                    shift and go to state 10
    block_stmt                     shift and go to state 11
    expr_stmt                      shift and go to state 12
    if_stmt                        shift and go to state 13
    read_stmt                      shift and go to state 14
    while_stmt                     shift and go to state 15
    write_stmt                     shift and go to state 16
    identifier                     shift and go to state 17
    expression                     shift and go to state 18
    lvalue                         shift and go to state 27
    literal                        shift and go to state 29

state 7

    (2) block_stmt -> LBRACE stmt_decl_list RBRACE .

    $end            reduce using rule 2 (block_stmt -> LBRACE stmt_decl_list RBRACE .)
    SEMICOLON       reduce using rule 2 (block_stmt -> LBRACE stmt_decl_list RBRACE .)
    RBRACE          reduce using rule 2 (block_stmt -> LBRACE stmt_decl_list RBRACE .)
    ELSE            reduce using rule 2 (block_stmt -> LBRACE stmt_decl_list RBRACE .)


state 8

    (4) stmt_decl_list -> stmt_decl_list_more stmt_decl . semicolon_opt
    (6) stmt_decl_list_more -> stmt_decl_list_more stmt_decl . SEMICOLON
    (9) semicolon_opt -> . epsilon
    (10) semicolon_opt -> . SEMICOLON
    (60) epsilon -> .

    SEMICOLON       shift and go to state 33
    RBRACE          reduce using rule 60 (epsilon -> .)

    semicolon_opt                  shift and go to state 32
    epsilon                        shift and go to state 34

state 9

    (7) stmt_decl -> stmt .

    SEMICOLON       reduce using rule 7 (stmt_decl -> stmt .)
    RBRACE          reduce using rule 7 (stmt_decl -> stmt .)


state 10

    (8) stmt_decl -> decleration .

    SEMICOLON       reduce using rule 8 (stmt_decl -> decleration .)
    RBRACE          reduce using rule 8 (stmt_decl -> decleration .)


state 11

    (41) stmt -> block_stmt .

    SEMICOLON       reduce using rule 41 (stmt -> block_stmt .)
    RBRACE          reduce using rule 41 (stmt -> block_stmt .)


state 12

    (42) stmt -> expr_stmt .

    SEMICOLON       reduce using rule 42 (stmt -> expr_stmt .)
    RBRACE          reduce using rule 42 (stmt -> expr_stmt .)


state 13

    (43) stmt -> if_stmt .

    SEMICOLON       reduce using rule 43 (stmt -> if_stmt .)
    RBRACE          reduce using rule 43 (stmt -> if_stmt .)


state 14

    (44) stmt -> read_stmt .

    SEMICOLON       reduce using rule 44 (stmt -> read_stmt .)
    RBRACE          reduce using rule 44 (stmt -> read_stmt .)


state 15

    (45) stmt -> while_stmt .

    SEMICOLON       reduce using rule 45 (stmt -> while_stmt .)
    RBRACE          reduce using rule 45 (stmt -> while_stmt .)


state 16

    (46) stmt -> write_stmt .

    SEMICOLON       reduce using rule 46 (stmt -> write_stmt .)
    RBRACE          reduce using rule 46 (stmt -> write_stmt .)


state 17

    (11) decleration -> identifier . COLON type assignment_opt
    (14) lvalue -> identifier .

    COLON           shift and go to state 35
    ASSIGN          reduce using rule 14 (lvalue -> identifier .)
    PLUS            reduce using rule 14 (lvalue -> identifier .)
    MINUS           reduce using rule 14 (lvalue -> identifier .)
    DIVIDE          reduce using rule 14 (lvalue -> identifier .)
    MODULUS         reduce using rule 14 (lvalue -> identifier .)
    TIMES           reduce using rule 14 (lvalue -> identifier .)
    POWER           reduce using rule 14 (lvalue -> identifier .)
    LT              reduce using rule 14 (lvalue -> identifier .)
    LTE             reduce using rule 14 (lvalue -> identifier .)
    GT              reduce using rule 14 (lvalue -> identifier .)
    GTE             reduce using rule 14 (lvalue -> identifier .)
    AND             reduce using rule 14 (lvalue -> identifier .)
    OR              reduce using rule 14 (lvalue -> identifier .)
    EQUALS          reduce using rule 14 (lvalue -> identifier .)
    NE              reduce using rule 14 (lvalue -> identifier .)
    SEMICOLON       reduce using rule 14 (lvalue -> identifier .)
    RBRACE          reduce using rule 14 (lvalue -> identifier .)


state 18

    (40) expr_stmt -> expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . MODULUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . POWER expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LTE expression
    (23) expression -> expression . GT expression
    (24) expression -> expression . GTE expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . EQUALS expression
    (28) expression -> expression . NE expression

    SEMICOLON       reduce using rule 40 (expr_stmt -> expression .)
    RBRACE          reduce using rule 40 (expr_stmt -> expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    TIMES           shift and go to state 40
    POWER           shift and go to state 41
    LT              shift and go to state 42
    LTE             shift and go to state 43
    GT              shift and go to state 44
    GTE             shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47
    EQUALS          shift and go to state 48
    NE              shift and go to state 49


state 19

    (47) if_stmt -> IF . expression block_stmt else_opt
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression POWER expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LTE expression
    (23) expression -> . expression GT expression
    (24) expression -> . expression GTE expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression EQUALS expression
    (28) expression -> . expression NE expression
    (29) expression -> . lvalue ASSIGN expression
    (30) expression -> . MINUS expression
    (31) expression -> . PLUS expression
    (32) expression -> . NOT expression
    (33) expression -> . LPAREN expression RPAREN
    (36) expression -> . literal
    (37) expression -> . lvalue
    (14) lvalue -> . identifier
    (34) literal -> . STRING_LITERAL
    (35) literal -> . INT_LITERAL
    (13) identifier -> . ID

    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    NOT             shift and go to state 28
    LPAREN          shift and go to state 21
    STRING_LITERAL  shift and go to state 30
    INT_LITERAL     shift and go to state 31
    ID              shift and go to state 24

    expression                     shift and go to state 50
    lvalue                         shift and go to state 27
    literal                        shift and go to state 29
    identifier                     shift and go to state 51

state 20

    (50) read_stmt -> READ . LPAREN lvalue_list RPAREN

    LPAREN          shift and go to state 52


state 21

    (33) expression -> LPAREN . expression RPAREN
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression POWER expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LTE expression
    (23) expression -> . expression GT expression
    (24) expression -> . expression GTE expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression EQUALS expression
    (28) expression -> . expression NE expression
    (29) expression -> . lvalue ASSIGN expression
    (30) expression -> . MINUS expression
    (31) expression -> . PLUS expression
    (32) expression -> . NOT expression
    (33) expression -> . LPAREN expression RPAREN
    (36) expression -> . literal
    (37) expression -> . lvalue
    (14) lvalue -> . identifier
    (34) literal -> . STRING_LITERAL
    (35) literal -> . INT_LITERAL
    (13) identifier -> . ID

    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    NOT             shift and go to state 28
    LPAREN          shift and go to state 21
    STRING_LITERAL  shift and go to state 30
    INT_LITERAL     shift and go to state 31
    ID              shift and go to state 24

    expression                     shift and go to state 53
    lvalue                         shift and go to state 27
    literal                        shift and go to state 29
    identifier                     shift and go to state 51

state 22

    (54) while_stmt -> WHILE . expression block_stmt
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression POWER expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LTE expression
    (23) expression -> . expression GT expression
    (24) expression -> . expression GTE expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression EQUALS expression
    (28) expression -> . expression NE expression
    (29) expression -> . lvalue ASSIGN expression
    (30) expression -> . MINUS expression
    (31) expression -> . PLUS expression
    (32) expression -> . NOT expression
    (33) expression -> . LPAREN expression RPAREN
    (36) expression -> . literal
    (37) expression -> . lvalue
    (14) lvalue -> . identifier
    (34) literal -> . STRING_LITERAL
    (35) literal -> . INT_LITERAL
    (13) identifier -> . ID

    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    NOT             shift and go to state 28
    LPAREN          shift and go to state 21
    STRING_LITERAL  shift and go to state 30
    INT_LITERAL     shift and go to state 31
    ID              shift and go to state 24

    expression                     shift and go to state 54
    lvalue                         shift and go to state 27
    literal                        shift and go to state 29
    identifier                     shift and go to state 51

state 23

    (55) write_stmt -> WRITE . LPAREN expr_string_list RPAREN

    LPAREN          shift and go to state 55


state 24

    (13) identifier -> ID .

    COLON           reduce using rule 13 (identifier -> ID .)
    ASSIGN          reduce using rule 13 (identifier -> ID .)
    PLUS            reduce using rule 13 (identifier -> ID .)
    MINUS           reduce using rule 13 (identifier -> ID .)
    DIVIDE          reduce using rule 13 (identifier -> ID .)
    MODULUS         reduce using rule 13 (identifier -> ID .)
    TIMES           reduce using rule 13 (identifier -> ID .)
    POWER           reduce using rule 13 (identifier -> ID .)
    LT              reduce using rule 13 (identifier -> ID .)
    LTE             reduce using rule 13 (identifier -> ID .)
    GT              reduce using rule 13 (identifier -> ID .)
    GTE             reduce using rule 13 (identifier -> ID .)
    AND             reduce using rule 13 (identifier -> ID .)
    OR              reduce using rule 13 (identifier -> ID .)
    EQUALS          reduce using rule 13 (identifier -> ID .)
    NE              reduce using rule 13 (identifier -> ID .)
    SEMICOLON       reduce using rule 13 (identifier -> ID .)
    RBRACE          reduce using rule 13 (identifier -> ID .)
    LBRACE          reduce using rule 13 (identifier -> ID .)
    RPAREN          reduce using rule 13 (identifier -> ID .)
    COMMA           reduce using rule 13 (identifier -> ID .)


state 25

    (31) expression -> PLUS . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression POWER expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LTE expression
    (23) expression -> . expression GT expression
    (24) expression -> . expression GTE expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression EQUALS expression
    (28) expression -> . expression NE expression
    (29) expression -> . lvalue ASSIGN expression
    (30) expression -> . MINUS expression
    (31) expression -> . PLUS expression
    (32) expression -> . NOT expression
    (33) expression -> . LPAREN expression RPAREN
    (36) expression -> . literal
    (37) expression -> . lvalue
    (14) lvalue -> . identifier
    (34) literal -> . STRING_LITERAL
    (35) literal -> . INT_LITERAL
    (13) identifier -> . ID

    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    NOT             shift and go to state 28
    LPAREN          shift and go to state 21
    STRING_LITERAL  shift and go to state 30
    INT_LITERAL     shift and go to state 31
    ID              shift and go to state 24

    expression                     shift and go to state 56
    lvalue                         shift and go to state 27
    literal                        shift and go to state 29
    identifier                     shift and go to state 51

state 26

    (30) expression -> MINUS . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression POWER expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LTE expression
    (23) expression -> . expression GT expression
    (24) expression -> . expression GTE expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression EQUALS expression
    (28) expression -> . expression NE expression
    (29) expression -> . lvalue ASSIGN expression
    (30) expression -> . MINUS expression
    (31) expression -> . PLUS expression
    (32) expression -> . NOT expression
    (33) expression -> . LPAREN expression RPAREN
    (36) expression -> . literal
    (37) expression -> . lvalue
    (14) lvalue -> . identifier
    (34) literal -> . STRING_LITERAL
    (35) literal -> . INT_LITERAL
    (13) identifier -> . ID

    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    NOT             shift and go to state 28
    LPAREN          shift and go to state 21
    STRING_LITERAL  shift and go to state 30
    INT_LITERAL     shift and go to state 31
    ID              shift and go to state 24

    expression                     shift and go to state 57
    lvalue                         shift and go to state 27
    literal                        shift and go to state 29
    identifier                     shift and go to state 51

state 27

    (29) expression -> lvalue . ASSIGN expression
    (37) expression -> lvalue .

    ASSIGN          shift and go to state 58
    PLUS            reduce using rule 37 (expression -> lvalue .)
    MINUS           reduce using rule 37 (expression -> lvalue .)
    DIVIDE          reduce using rule 37 (expression -> lvalue .)
    MODULUS         reduce using rule 37 (expression -> lvalue .)
    TIMES           reduce using rule 37 (expression -> lvalue .)
    POWER           reduce using rule 37 (expression -> lvalue .)
    LT              reduce using rule 37 (expression -> lvalue .)
    LTE             reduce using rule 37 (expression -> lvalue .)
    GT              reduce using rule 37 (expression -> lvalue .)
    GTE             reduce using rule 37 (expression -> lvalue .)
    AND             reduce using rule 37 (expression -> lvalue .)
    OR              reduce using rule 37 (expression -> lvalue .)
    EQUALS          reduce using rule 37 (expression -> lvalue .)
    NE              reduce using rule 37 (expression -> lvalue .)
    SEMICOLON       reduce using rule 37 (expression -> lvalue .)
    RBRACE          reduce using rule 37 (expression -> lvalue .)
    LBRACE          reduce using rule 37 (expression -> lvalue .)
    RPAREN          reduce using rule 37 (expression -> lvalue .)
    COMMA           reduce using rule 37 (expression -> lvalue .)


state 28

    (32) expression -> NOT . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression POWER expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LTE expression
    (23) expression -> . expression GT expression
    (24) expression -> . expression GTE expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression EQUALS expression
    (28) expression -> . expression NE expression
    (29) expression -> . lvalue ASSIGN expression
    (30) expression -> . MINUS expression
    (31) expression -> . PLUS expression
    (32) expression -> . NOT expression
    (33) expression -> . LPAREN expression RPAREN
    (36) expression -> . literal
    (37) expression -> . lvalue
    (14) lvalue -> . identifier
    (34) literal -> . STRING_LITERAL
    (35) literal -> . INT_LITERAL
    (13) identifier -> . ID

    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    NOT             shift and go to state 28
    LPAREN          shift and go to state 21
    STRING_LITERAL  shift and go to state 30
    INT_LITERAL     shift and go to state 31
    ID              shift and go to state 24

    expression                     shift and go to state 59
    lvalue                         shift and go to state 27
    literal                        shift and go to state 29
    identifier                     shift and go to state 51

state 29

    (36) expression -> literal .

    PLUS            reduce using rule 36 (expression -> literal .)
    MINUS           reduce using rule 36 (expression -> literal .)
    DIVIDE          reduce using rule 36 (expression -> literal .)
    MODULUS         reduce using rule 36 (expression -> literal .)
    TIMES           reduce using rule 36 (expression -> literal .)
    POWER           reduce using rule 36 (expression -> literal .)
    LT              reduce using rule 36 (expression -> literal .)
    LTE             reduce using rule 36 (expression -> literal .)
    GT              reduce using rule 36 (expression -> literal .)
    GTE             reduce using rule 36 (expression -> literal .)
    AND             reduce using rule 36 (expression -> literal .)
    OR              reduce using rule 36 (expression -> literal .)
    EQUALS          reduce using rule 36 (expression -> literal .)
    NE              reduce using rule 36 (expression -> literal .)
    SEMICOLON       reduce using rule 36 (expression -> literal .)
    RBRACE          reduce using rule 36 (expression -> literal .)
    LBRACE          reduce using rule 36 (expression -> literal .)
    RPAREN          reduce using rule 36 (expression -> literal .)
    COMMA           reduce using rule 36 (expression -> literal .)


state 30

    (34) literal -> STRING_LITERAL .

    PLUS            reduce using rule 34 (literal -> STRING_LITERAL .)
    MINUS           reduce using rule 34 (literal -> STRING_LITERAL .)
    DIVIDE          reduce using rule 34 (literal -> STRING_LITERAL .)
    MODULUS         reduce using rule 34 (literal -> STRING_LITERAL .)
    TIMES           reduce using rule 34 (literal -> STRING_LITERAL .)
    POWER           reduce using rule 34 (literal -> STRING_LITERAL .)
    LT              reduce using rule 34 (literal -> STRING_LITERAL .)
    LTE             reduce using rule 34 (literal -> STRING_LITERAL .)
    GT              reduce using rule 34 (literal -> STRING_LITERAL .)
    GTE             reduce using rule 34 (literal -> STRING_LITERAL .)
    AND             reduce using rule 34 (literal -> STRING_LITERAL .)
    OR              reduce using rule 34 (literal -> STRING_LITERAL .)
    EQUALS          reduce using rule 34 (literal -> STRING_LITERAL .)
    NE              reduce using rule 34 (literal -> STRING_LITERAL .)
    SEMICOLON       reduce using rule 34 (literal -> STRING_LITERAL .)
    RBRACE          reduce using rule 34 (literal -> STRING_LITERAL .)
    LBRACE          reduce using rule 34 (literal -> STRING_LITERAL .)
    RPAREN          reduce using rule 34 (literal -> STRING_LITERAL .)
    COMMA           reduce using rule 34 (literal -> STRING_LITERAL .)


state 31

    (35) literal -> INT_LITERAL .

    PLUS            reduce using rule 35 (literal -> INT_LITERAL .)
    MINUS           reduce using rule 35 (literal -> INT_LITERAL .)
    DIVIDE          reduce using rule 35 (literal -> INT_LITERAL .)
    MODULUS         reduce using rule 35 (literal -> INT_LITERAL .)
    TIMES           reduce using rule 35 (literal -> INT_LITERAL .)
    POWER           reduce using rule 35 (literal -> INT_LITERAL .)
    LT              reduce using rule 35 (literal -> INT_LITERAL .)
    LTE             reduce using rule 35 (literal -> INT_LITERAL .)
    GT              reduce using rule 35 (literal -> INT_LITERAL .)
    GTE             reduce using rule 35 (literal -> INT_LITERAL .)
    AND             reduce using rule 35 (literal -> INT_LITERAL .)
    OR              reduce using rule 35 (literal -> INT_LITERAL .)
    EQUALS          reduce using rule 35 (literal -> INT_LITERAL .)
    NE              reduce using rule 35 (literal -> INT_LITERAL .)
    SEMICOLON       reduce using rule 35 (literal -> INT_LITERAL .)
    RBRACE          reduce using rule 35 (literal -> INT_LITERAL .)
    LBRACE          reduce using rule 35 (literal -> INT_LITERAL .)
    RPAREN          reduce using rule 35 (literal -> INT_LITERAL .)
    COMMA           reduce using rule 35 (literal -> INT_LITERAL .)


state 32

    (4) stmt_decl_list -> stmt_decl_list_more stmt_decl semicolon_opt .

    RBRACE          reduce using rule 4 (stmt_decl_list -> stmt_decl_list_more stmt_decl semicolon_opt .)


state 33

    (6) stmt_decl_list_more -> stmt_decl_list_more stmt_decl SEMICOLON .
    (10) semicolon_opt -> SEMICOLON .

    LBRACE          reduce using rule 6 (stmt_decl_list_more -> stmt_decl_list_more stmt_decl SEMICOLON .)
    IF              reduce using rule 6 (stmt_decl_list_more -> stmt_decl_list_more stmt_decl SEMICOLON .)
    READ            reduce using rule 6 (stmt_decl_list_more -> stmt_decl_list_more stmt_decl SEMICOLON .)
    WHILE           reduce using rule 6 (stmt_decl_list_more -> stmt_decl_list_more stmt_decl SEMICOLON .)
    WRITE           reduce using rule 6 (stmt_decl_list_more -> stmt_decl_list_more stmt_decl SEMICOLON .)
    ID              reduce using rule 6 (stmt_decl_list_more -> stmt_decl_list_more stmt_decl SEMICOLON .)
    MINUS           reduce using rule 6 (stmt_decl_list_more -> stmt_decl_list_more stmt_decl SEMICOLON .)
    PLUS            reduce using rule 6 (stmt_decl_list_more -> stmt_decl_list_more stmt_decl SEMICOLON .)
    NOT             reduce using rule 6 (stmt_decl_list_more -> stmt_decl_list_more stmt_decl SEMICOLON .)
    LPAREN          reduce using rule 6 (stmt_decl_list_more -> stmt_decl_list_more stmt_decl SEMICOLON .)
    STRING_LITERAL  reduce using rule 6 (stmt_decl_list_more -> stmt_decl_list_more stmt_decl SEMICOLON .)
    INT_LITERAL     reduce using rule 6 (stmt_decl_list_more -> stmt_decl_list_more stmt_decl SEMICOLON .)
    RBRACE          reduce using rule 10 (semicolon_opt -> SEMICOLON .)


state 34

    (9) semicolon_opt -> epsilon .

    RBRACE          reduce using rule 9 (semicolon_opt -> epsilon .)


state 35

    (11) decleration -> identifier COLON . type assignment_opt
    (12) type -> . INT

    INT             shift and go to state 61

    type                           shift and go to state 60

state 36

    (15) expression -> expression PLUS . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression POWER expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LTE expression
    (23) expression -> . expression GT expression
    (24) expression -> . expression GTE expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression EQUALS expression
    (28) expression -> . expression NE expression
    (29) expression -> . lvalue ASSIGN expression
    (30) expression -> . MINUS expression
    (31) expression -> . PLUS expression
    (32) expression -> . NOT expression
    (33) expression -> . LPAREN expression RPAREN
    (36) expression -> . literal
    (37) expression -> . lvalue
    (14) lvalue -> . identifier
    (34) literal -> . STRING_LITERAL
    (35) literal -> . INT_LITERAL
    (13) identifier -> . ID

    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    NOT             shift and go to state 28
    LPAREN          shift and go to state 21
    STRING_LITERAL  shift and go to state 30
    INT_LITERAL     shift and go to state 31
    ID              shift and go to state 24

    expression                     shift and go to state 62
    lvalue                         shift and go to state 27
    literal                        shift and go to state 29
    identifier                     shift and go to state 51

state 37

    (16) expression -> expression MINUS . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression POWER expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LTE expression
    (23) expression -> . expression GT expression
    (24) expression -> . expression GTE expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression EQUALS expression
    (28) expression -> . expression NE expression
    (29) expression -> . lvalue ASSIGN expression
    (30) expression -> . MINUS expression
    (31) expression -> . PLUS expression
    (32) expression -> . NOT expression
    (33) expression -> . LPAREN expression RPAREN
    (36) expression -> . literal
    (37) expression -> . lvalue
    (14) lvalue -> . identifier
    (34) literal -> . STRING_LITERAL
    (35) literal -> . INT_LITERAL
    (13) identifier -> . ID

    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    NOT             shift and go to state 28
    LPAREN          shift and go to state 21
    STRING_LITERAL  shift and go to state 30
    INT_LITERAL     shift and go to state 31
    ID              shift and go to state 24

    expression                     shift and go to state 63
    lvalue                         shift and go to state 27
    literal                        shift and go to state 29
    identifier                     shift and go to state 51

state 38

    (17) expression -> expression DIVIDE . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression POWER expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LTE expression
    (23) expression -> . expression GT expression
    (24) expression -> . expression GTE expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression EQUALS expression
    (28) expression -> . expression NE expression
    (29) expression -> . lvalue ASSIGN expression
    (30) expression -> . MINUS expression
    (31) expression -> . PLUS expression
    (32) expression -> . NOT expression
    (33) expression -> . LPAREN expression RPAREN
    (36) expression -> . literal
    (37) expression -> . lvalue
    (14) lvalue -> . identifier
    (34) literal -> . STRING_LITERAL
    (35) literal -> . INT_LITERAL
    (13) identifier -> . ID

    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    NOT             shift and go to state 28
    LPAREN          shift and go to state 21
    STRING_LITERAL  shift and go to state 30
    INT_LITERAL     shift and go to state 31
    ID              shift and go to state 24

    expression                     shift and go to state 64
    lvalue                         shift and go to state 27
    literal                        shift and go to state 29
    identifier                     shift and go to state 51

state 39

    (18) expression -> expression MODULUS . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression POWER expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LTE expression
    (23) expression -> . expression GT expression
    (24) expression -> . expression GTE expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression EQUALS expression
    (28) expression -> . expression NE expression
    (29) expression -> . lvalue ASSIGN expression
    (30) expression -> . MINUS expression
    (31) expression -> . PLUS expression
    (32) expression -> . NOT expression
    (33) expression -> . LPAREN expression RPAREN
    (36) expression -> . literal
    (37) expression -> . lvalue
    (14) lvalue -> . identifier
    (34) literal -> . STRING_LITERAL
    (35) literal -> . INT_LITERAL
    (13) identifier -> . ID

    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    NOT             shift and go to state 28
    LPAREN          shift and go to state 21
    STRING_LITERAL  shift and go to state 30
    INT_LITERAL     shift and go to state 31
    ID              shift and go to state 24

    expression                     shift and go to state 65
    lvalue                         shift and go to state 27
    literal                        shift and go to state 29
    identifier                     shift and go to state 51

state 40

    (19) expression -> expression TIMES . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression POWER expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LTE expression
    (23) expression -> . expression GT expression
    (24) expression -> . expression GTE expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression EQUALS expression
    (28) expression -> . expression NE expression
    (29) expression -> . lvalue ASSIGN expression
    (30) expression -> . MINUS expression
    (31) expression -> . PLUS expression
    (32) expression -> . NOT expression
    (33) expression -> . LPAREN expression RPAREN
    (36) expression -> . literal
    (37) expression -> . lvalue
    (14) lvalue -> . identifier
    (34) literal -> . STRING_LITERAL
    (35) literal -> . INT_LITERAL
    (13) identifier -> . ID

    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    NOT             shift and go to state 28
    LPAREN          shift and go to state 21
    STRING_LITERAL  shift and go to state 30
    INT_LITERAL     shift and go to state 31
    ID              shift and go to state 24

    expression                     shift and go to state 66
    lvalue                         shift and go to state 27
    literal                        shift and go to state 29
    identifier                     shift and go to state 51

state 41

    (20) expression -> expression POWER . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression POWER expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LTE expression
    (23) expression -> . expression GT expression
    (24) expression -> . expression GTE expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression EQUALS expression
    (28) expression -> . expression NE expression
    (29) expression -> . lvalue ASSIGN expression
    (30) expression -> . MINUS expression
    (31) expression -> . PLUS expression
    (32) expression -> . NOT expression
    (33) expression -> . LPAREN expression RPAREN
    (36) expression -> . literal
    (37) expression -> . lvalue
    (14) lvalue -> . identifier
    (34) literal -> . STRING_LITERAL
    (35) literal -> . INT_LITERAL
    (13) identifier -> . ID

    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    NOT             shift and go to state 28
    LPAREN          shift and go to state 21
    STRING_LITERAL  shift and go to state 30
    INT_LITERAL     shift and go to state 31
    ID              shift and go to state 24

    expression                     shift and go to state 67
    lvalue                         shift and go to state 27
    literal                        shift and go to state 29
    identifier                     shift and go to state 51

state 42

    (21) expression -> expression LT . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression POWER expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LTE expression
    (23) expression -> . expression GT expression
    (24) expression -> . expression GTE expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression EQUALS expression
    (28) expression -> . expression NE expression
    (29) expression -> . lvalue ASSIGN expression
    (30) expression -> . MINUS expression
    (31) expression -> . PLUS expression
    (32) expression -> . NOT expression
    (33) expression -> . LPAREN expression RPAREN
    (36) expression -> . literal
    (37) expression -> . lvalue
    (14) lvalue -> . identifier
    (34) literal -> . STRING_LITERAL
    (35) literal -> . INT_LITERAL
    (13) identifier -> . ID

    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    NOT             shift and go to state 28
    LPAREN          shift and go to state 21
    STRING_LITERAL  shift and go to state 30
    INT_LITERAL     shift and go to state 31
    ID              shift and go to state 24

    expression                     shift and go to state 68
    lvalue                         shift and go to state 27
    literal                        shift and go to state 29
    identifier                     shift and go to state 51

state 43

    (22) expression -> expression LTE . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression POWER expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LTE expression
    (23) expression -> . expression GT expression
    (24) expression -> . expression GTE expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression EQUALS expression
    (28) expression -> . expression NE expression
    (29) expression -> . lvalue ASSIGN expression
    (30) expression -> . MINUS expression
    (31) expression -> . PLUS expression
    (32) expression -> . NOT expression
    (33) expression -> . LPAREN expression RPAREN
    (36) expression -> . literal
    (37) expression -> . lvalue
    (14) lvalue -> . identifier
    (34) literal -> . STRING_LITERAL
    (35) literal -> . INT_LITERAL
    (13) identifier -> . ID

    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    NOT             shift and go to state 28
    LPAREN          shift and go to state 21
    STRING_LITERAL  shift and go to state 30
    INT_LITERAL     shift and go to state 31
    ID              shift and go to state 24

    expression                     shift and go to state 69
    lvalue                         shift and go to state 27
    literal                        shift and go to state 29
    identifier                     shift and go to state 51

state 44

    (23) expression -> expression GT . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression POWER expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LTE expression
    (23) expression -> . expression GT expression
    (24) expression -> . expression GTE expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression EQUALS expression
    (28) expression -> . expression NE expression
    (29) expression -> . lvalue ASSIGN expression
    (30) expression -> . MINUS expression
    (31) expression -> . PLUS expression
    (32) expression -> . NOT expression
    (33) expression -> . LPAREN expression RPAREN
    (36) expression -> . literal
    (37) expression -> . lvalue
    (14) lvalue -> . identifier
    (34) literal -> . STRING_LITERAL
    (35) literal -> . INT_LITERAL
    (13) identifier -> . ID

    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    NOT             shift and go to state 28
    LPAREN          shift and go to state 21
    STRING_LITERAL  shift and go to state 30
    INT_LITERAL     shift and go to state 31
    ID              shift and go to state 24

    expression                     shift and go to state 70
    lvalue                         shift and go to state 27
    literal                        shift and go to state 29
    identifier                     shift and go to state 51

state 45

    (24) expression -> expression GTE . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression POWER expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LTE expression
    (23) expression -> . expression GT expression
    (24) expression -> . expression GTE expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression EQUALS expression
    (28) expression -> . expression NE expression
    (29) expression -> . lvalue ASSIGN expression
    (30) expression -> . MINUS expression
    (31) expression -> . PLUS expression
    (32) expression -> . NOT expression
    (33) expression -> . LPAREN expression RPAREN
    (36) expression -> . literal
    (37) expression -> . lvalue
    (14) lvalue -> . identifier
    (34) literal -> . STRING_LITERAL
    (35) literal -> . INT_LITERAL
    (13) identifier -> . ID

    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    NOT             shift and go to state 28
    LPAREN          shift and go to state 21
    STRING_LITERAL  shift and go to state 30
    INT_LITERAL     shift and go to state 31
    ID              shift and go to state 24

    expression                     shift and go to state 71
    lvalue                         shift and go to state 27
    literal                        shift and go to state 29
    identifier                     shift and go to state 51

state 46

    (25) expression -> expression AND . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression POWER expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LTE expression
    (23) expression -> . expression GT expression
    (24) expression -> . expression GTE expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression EQUALS expression
    (28) expression -> . expression NE expression
    (29) expression -> . lvalue ASSIGN expression
    (30) expression -> . MINUS expression
    (31) expression -> . PLUS expression
    (32) expression -> . NOT expression
    (33) expression -> . LPAREN expression RPAREN
    (36) expression -> . literal
    (37) expression -> . lvalue
    (14) lvalue -> . identifier
    (34) literal -> . STRING_LITERAL
    (35) literal -> . INT_LITERAL
    (13) identifier -> . ID

    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    NOT             shift and go to state 28
    LPAREN          shift and go to state 21
    STRING_LITERAL  shift and go to state 30
    INT_LITERAL     shift and go to state 31
    ID              shift and go to state 24

    expression                     shift and go to state 72
    lvalue                         shift and go to state 27
    literal                        shift and go to state 29
    identifier                     shift and go to state 51

state 47

    (26) expression -> expression OR . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression POWER expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LTE expression
    (23) expression -> . expression GT expression
    (24) expression -> . expression GTE expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression EQUALS expression
    (28) expression -> . expression NE expression
    (29) expression -> . lvalue ASSIGN expression
    (30) expression -> . MINUS expression
    (31) expression -> . PLUS expression
    (32) expression -> . NOT expression
    (33) expression -> . LPAREN expression RPAREN
    (36) expression -> . literal
    (37) expression -> . lvalue
    (14) lvalue -> . identifier
    (34) literal -> . STRING_LITERAL
    (35) literal -> . INT_LITERAL
    (13) identifier -> . ID

    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    NOT             shift and go to state 28
    LPAREN          shift and go to state 21
    STRING_LITERAL  shift and go to state 30
    INT_LITERAL     shift and go to state 31
    ID              shift and go to state 24

    expression                     shift and go to state 73
    lvalue                         shift and go to state 27
    literal                        shift and go to state 29
    identifier                     shift and go to state 51

state 48

    (27) expression -> expression EQUALS . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression POWER expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LTE expression
    (23) expression -> . expression GT expression
    (24) expression -> . expression GTE expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression EQUALS expression
    (28) expression -> . expression NE expression
    (29) expression -> . lvalue ASSIGN expression
    (30) expression -> . MINUS expression
    (31) expression -> . PLUS expression
    (32) expression -> . NOT expression
    (33) expression -> . LPAREN expression RPAREN
    (36) expression -> . literal
    (37) expression -> . lvalue
    (14) lvalue -> . identifier
    (34) literal -> . STRING_LITERAL
    (35) literal -> . INT_LITERAL
    (13) identifier -> . ID

    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    NOT             shift and go to state 28
    LPAREN          shift and go to state 21
    STRING_LITERAL  shift and go to state 30
    INT_LITERAL     shift and go to state 31
    ID              shift and go to state 24

    expression                     shift and go to state 74
    lvalue                         shift and go to state 27
    literal                        shift and go to state 29
    identifier                     shift and go to state 51

state 49

    (28) expression -> expression NE . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression POWER expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LTE expression
    (23) expression -> . expression GT expression
    (24) expression -> . expression GTE expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression EQUALS expression
    (28) expression -> . expression NE expression
    (29) expression -> . lvalue ASSIGN expression
    (30) expression -> . MINUS expression
    (31) expression -> . PLUS expression
    (32) expression -> . NOT expression
    (33) expression -> . LPAREN expression RPAREN
    (36) expression -> . literal
    (37) expression -> . lvalue
    (14) lvalue -> . identifier
    (34) literal -> . STRING_LITERAL
    (35) literal -> . INT_LITERAL
    (13) identifier -> . ID

    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    NOT             shift and go to state 28
    LPAREN          shift and go to state 21
    STRING_LITERAL  shift and go to state 30
    INT_LITERAL     shift and go to state 31
    ID              shift and go to state 24

    expression                     shift and go to state 75
    lvalue                         shift and go to state 27
    literal                        shift and go to state 29
    identifier                     shift and go to state 51

state 50

    (47) if_stmt -> IF expression . block_stmt else_opt
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . MODULUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . POWER expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LTE expression
    (23) expression -> expression . GT expression
    (24) expression -> expression . GTE expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . EQUALS expression
    (28) expression -> expression . NE expression
    (2) block_stmt -> . LBRACE stmt_decl_list RBRACE

    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    TIMES           shift and go to state 40
    POWER           shift and go to state 41
    LT              shift and go to state 42
    LTE             shift and go to state 43
    GT              shift and go to state 44
    GTE             shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47
    EQUALS          shift and go to state 48
    NE              shift and go to state 49
    LBRACE          shift and go to state 3

    block_stmt                     shift and go to state 76

state 51

    (14) lvalue -> identifier .

    ASSIGN          reduce using rule 14 (lvalue -> identifier .)
    PLUS            reduce using rule 14 (lvalue -> identifier .)
    MINUS           reduce using rule 14 (lvalue -> identifier .)
    DIVIDE          reduce using rule 14 (lvalue -> identifier .)
    MODULUS         reduce using rule 14 (lvalue -> identifier .)
    TIMES           reduce using rule 14 (lvalue -> identifier .)
    POWER           reduce using rule 14 (lvalue -> identifier .)
    LT              reduce using rule 14 (lvalue -> identifier .)
    LTE             reduce using rule 14 (lvalue -> identifier .)
    GT              reduce using rule 14 (lvalue -> identifier .)
    GTE             reduce using rule 14 (lvalue -> identifier .)
    AND             reduce using rule 14 (lvalue -> identifier .)
    OR              reduce using rule 14 (lvalue -> identifier .)
    EQUALS          reduce using rule 14 (lvalue -> identifier .)
    NE              reduce using rule 14 (lvalue -> identifier .)
    LBRACE          reduce using rule 14 (lvalue -> identifier .)
    RPAREN          reduce using rule 14 (lvalue -> identifier .)
    SEMICOLON       reduce using rule 14 (lvalue -> identifier .)
    RBRACE          reduce using rule 14 (lvalue -> identifier .)
    COMMA           reduce using rule 14 (lvalue -> identifier .)


state 52

    (50) read_stmt -> READ LPAREN . lvalue_list RPAREN
    (51) lvalue_list -> . lvalue_more lvalue
    (52) lvalue_more -> . epsilon
    (53) lvalue_more -> . lvalue_more lvalue COMMA
    (60) epsilon -> .

    ID              reduce using rule 60 (epsilon -> .)

    lvalue_list                    shift and go to state 77
    lvalue_more                    shift and go to state 78
    epsilon                        shift and go to state 79

state 53

    (33) expression -> LPAREN expression . RPAREN
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . MODULUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . POWER expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LTE expression
    (23) expression -> expression . GT expression
    (24) expression -> expression . GTE expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . EQUALS expression
    (28) expression -> expression . NE expression

    RPAREN          shift and go to state 80
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    TIMES           shift and go to state 40
    POWER           shift and go to state 41
    LT              shift and go to state 42
    LTE             shift and go to state 43
    GT              shift and go to state 44
    GTE             shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47
    EQUALS          shift and go to state 48
    NE              shift and go to state 49


state 54

    (54) while_stmt -> WHILE expression . block_stmt
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . MODULUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . POWER expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LTE expression
    (23) expression -> expression . GT expression
    (24) expression -> expression . GTE expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . EQUALS expression
    (28) expression -> expression . NE expression
    (2) block_stmt -> . LBRACE stmt_decl_list RBRACE

    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    TIMES           shift and go to state 40
    POWER           shift and go to state 41
    LT              shift and go to state 42
    LTE             shift and go to state 43
    GT              shift and go to state 44
    GTE             shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47
    EQUALS          shift and go to state 48
    NE              shift and go to state 49
    LBRACE          shift and go to state 3

    block_stmt                     shift and go to state 81

state 55

    (55) write_stmt -> WRITE LPAREN . expr_string_list RPAREN
    (56) expr_string_list -> . epsilon
    (57) expr_string_list -> . expr_string_more expression
    (60) epsilon -> .
    (58) expr_string_more -> . epsilon
    (59) expr_string_more -> . expr_string_more expression COMMA

    RPAREN          reduce using rule 60 (epsilon -> .)
    MINUS           reduce using rule 60 (epsilon -> .)
    PLUS            reduce using rule 60 (epsilon -> .)
    NOT             reduce using rule 60 (epsilon -> .)
    LPAREN          reduce using rule 60 (epsilon -> .)
    STRING_LITERAL  reduce using rule 60 (epsilon -> .)
    INT_LITERAL     reduce using rule 60 (epsilon -> .)
    ID              reduce using rule 60 (epsilon -> .)

    expr_string_list               shift and go to state 82
    epsilon                        shift and go to state 83
    expr_string_more               shift and go to state 84

state 56

    (31) expression -> PLUS expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . MODULUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . POWER expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LTE expression
    (23) expression -> expression . GT expression
    (24) expression -> expression . GTE expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . EQUALS expression
    (28) expression -> expression . NE expression

    PLUS            reduce using rule 31 (expression -> PLUS expression .)
    MINUS           reduce using rule 31 (expression -> PLUS expression .)
    DIVIDE          reduce using rule 31 (expression -> PLUS expression .)
    MODULUS         reduce using rule 31 (expression -> PLUS expression .)
    TIMES           reduce using rule 31 (expression -> PLUS expression .)
    POWER           reduce using rule 31 (expression -> PLUS expression .)
    LT              reduce using rule 31 (expression -> PLUS expression .)
    LTE             reduce using rule 31 (expression -> PLUS expression .)
    GT              reduce using rule 31 (expression -> PLUS expression .)
    GTE             reduce using rule 31 (expression -> PLUS expression .)
    AND             reduce using rule 31 (expression -> PLUS expression .)
    OR              reduce using rule 31 (expression -> PLUS expression .)
    EQUALS          reduce using rule 31 (expression -> PLUS expression .)
    NE              reduce using rule 31 (expression -> PLUS expression .)
    SEMICOLON       reduce using rule 31 (expression -> PLUS expression .)
    RBRACE          reduce using rule 31 (expression -> PLUS expression .)
    LBRACE          reduce using rule 31 (expression -> PLUS expression .)
    RPAREN          reduce using rule 31 (expression -> PLUS expression .)
    COMMA           reduce using rule 31 (expression -> PLUS expression .)

  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! DIVIDE          [ shift and go to state 38 ]
  ! MODULUS         [ shift and go to state 39 ]
  ! TIMES           [ shift and go to state 40 ]
  ! POWER           [ shift and go to state 41 ]
  ! LT              [ shift and go to state 42 ]
  ! LTE             [ shift and go to state 43 ]
  ! GT              [ shift and go to state 44 ]
  ! GTE             [ shift and go to state 45 ]
  ! AND             [ shift and go to state 46 ]
  ! OR              [ shift and go to state 47 ]
  ! EQUALS          [ shift and go to state 48 ]
  ! NE              [ shift and go to state 49 ]


state 57

    (30) expression -> MINUS expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . MODULUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . POWER expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LTE expression
    (23) expression -> expression . GT expression
    (24) expression -> expression . GTE expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . EQUALS expression
    (28) expression -> expression . NE expression

    PLUS            reduce using rule 30 (expression -> MINUS expression .)
    MINUS           reduce using rule 30 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 30 (expression -> MINUS expression .)
    MODULUS         reduce using rule 30 (expression -> MINUS expression .)
    TIMES           reduce using rule 30 (expression -> MINUS expression .)
    POWER           reduce using rule 30 (expression -> MINUS expression .)
    LT              reduce using rule 30 (expression -> MINUS expression .)
    LTE             reduce using rule 30 (expression -> MINUS expression .)
    GT              reduce using rule 30 (expression -> MINUS expression .)
    GTE             reduce using rule 30 (expression -> MINUS expression .)
    AND             reduce using rule 30 (expression -> MINUS expression .)
    OR              reduce using rule 30 (expression -> MINUS expression .)
    EQUALS          reduce using rule 30 (expression -> MINUS expression .)
    NE              reduce using rule 30 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 30 (expression -> MINUS expression .)
    RBRACE          reduce using rule 30 (expression -> MINUS expression .)
    LBRACE          reduce using rule 30 (expression -> MINUS expression .)
    RPAREN          reduce using rule 30 (expression -> MINUS expression .)
    COMMA           reduce using rule 30 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! DIVIDE          [ shift and go to state 38 ]
  ! MODULUS         [ shift and go to state 39 ]
  ! TIMES           [ shift and go to state 40 ]
  ! POWER           [ shift and go to state 41 ]
  ! LT              [ shift and go to state 42 ]
  ! LTE             [ shift and go to state 43 ]
  ! GT              [ shift and go to state 44 ]
  ! GTE             [ shift and go to state 45 ]
  ! AND             [ shift and go to state 46 ]
  ! OR              [ shift and go to state 47 ]
  ! EQUALS          [ shift and go to state 48 ]
  ! NE              [ shift and go to state 49 ]


state 58

    (29) expression -> lvalue ASSIGN . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression POWER expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LTE expression
    (23) expression -> . expression GT expression
    (24) expression -> . expression GTE expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression EQUALS expression
    (28) expression -> . expression NE expression
    (29) expression -> . lvalue ASSIGN expression
    (30) expression -> . MINUS expression
    (31) expression -> . PLUS expression
    (32) expression -> . NOT expression
    (33) expression -> . LPAREN expression RPAREN
    (36) expression -> . literal
    (37) expression -> . lvalue
    (14) lvalue -> . identifier
    (34) literal -> . STRING_LITERAL
    (35) literal -> . INT_LITERAL
    (13) identifier -> . ID

    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    NOT             shift and go to state 28
    LPAREN          shift and go to state 21
    STRING_LITERAL  shift and go to state 30
    INT_LITERAL     shift and go to state 31
    ID              shift and go to state 24

    lvalue                         shift and go to state 27
    expression                     shift and go to state 85
    literal                        shift and go to state 29
    identifier                     shift and go to state 51

state 59

    (32) expression -> NOT expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . MODULUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . POWER expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LTE expression
    (23) expression -> expression . GT expression
    (24) expression -> expression . GTE expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . EQUALS expression
    (28) expression -> expression . NE expression

    PLUS            reduce using rule 32 (expression -> NOT expression .)
    MINUS           reduce using rule 32 (expression -> NOT expression .)
    DIVIDE          reduce using rule 32 (expression -> NOT expression .)
    MODULUS         reduce using rule 32 (expression -> NOT expression .)
    TIMES           reduce using rule 32 (expression -> NOT expression .)
    LT              reduce using rule 32 (expression -> NOT expression .)
    LTE             reduce using rule 32 (expression -> NOT expression .)
    GT              reduce using rule 32 (expression -> NOT expression .)
    GTE             reduce using rule 32 (expression -> NOT expression .)
    AND             reduce using rule 32 (expression -> NOT expression .)
    OR              reduce using rule 32 (expression -> NOT expression .)
    EQUALS          reduce using rule 32 (expression -> NOT expression .)
    NE              reduce using rule 32 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 32 (expression -> NOT expression .)
    RBRACE          reduce using rule 32 (expression -> NOT expression .)
    LBRACE          reduce using rule 32 (expression -> NOT expression .)
    RPAREN          reduce using rule 32 (expression -> NOT expression .)
    COMMA           reduce using rule 32 (expression -> NOT expression .)
    POWER           shift and go to state 41

  ! POWER           [ reduce using rule 32 (expression -> NOT expression .) ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! DIVIDE          [ shift and go to state 38 ]
  ! MODULUS         [ shift and go to state 39 ]
  ! TIMES           [ shift and go to state 40 ]
  ! LT              [ shift and go to state 42 ]
  ! LTE             [ shift and go to state 43 ]
  ! GT              [ shift and go to state 44 ]
  ! GTE             [ shift and go to state 45 ]
  ! AND             [ shift and go to state 46 ]
  ! OR              [ shift and go to state 47 ]
  ! EQUALS          [ shift and go to state 48 ]
  ! NE              [ shift and go to state 49 ]


state 60

    (11) decleration -> identifier COLON type . assignment_opt
    (38) assignment_opt -> . epsilon
    (39) assignment_opt -> . ASSIGN expression
    (60) epsilon -> .

    ASSIGN          shift and go to state 88
    SEMICOLON       reduce using rule 60 (epsilon -> .)
    RBRACE          reduce using rule 60 (epsilon -> .)

    assignment_opt                 shift and go to state 86
    epsilon                        shift and go to state 87

state 61

    (12) type -> INT .

    ASSIGN          reduce using rule 12 (type -> INT .)
    SEMICOLON       reduce using rule 12 (type -> INT .)
    RBRACE          reduce using rule 12 (type -> INT .)


state 62

    (15) expression -> expression PLUS expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . MODULUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . POWER expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LTE expression
    (23) expression -> expression . GT expression
    (24) expression -> expression . GTE expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . EQUALS expression
    (28) expression -> expression . NE expression

    PLUS            reduce using rule 15 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 15 (expression -> expression PLUS expression .)
    LT              reduce using rule 15 (expression -> expression PLUS expression .)
    LTE             reduce using rule 15 (expression -> expression PLUS expression .)
    GT              reduce using rule 15 (expression -> expression PLUS expression .)
    GTE             reduce using rule 15 (expression -> expression PLUS expression .)
    AND             reduce using rule 15 (expression -> expression PLUS expression .)
    OR              reduce using rule 15 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 15 (expression -> expression PLUS expression .)
    NE              reduce using rule 15 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 15 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 15 (expression -> expression PLUS expression .)
    LBRACE          reduce using rule 15 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 15 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 15 (expression -> expression PLUS expression .)
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    TIMES           shift and go to state 40
    POWER           shift and go to state 41

  ! DIVIDE          [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! MODULUS         [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! POWER           [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! LT              [ shift and go to state 42 ]
  ! LTE             [ shift and go to state 43 ]
  ! GT              [ shift and go to state 44 ]
  ! GTE             [ shift and go to state 45 ]
  ! AND             [ shift and go to state 46 ]
  ! OR              [ shift and go to state 47 ]
  ! EQUALS          [ shift and go to state 48 ]
  ! NE              [ shift and go to state 49 ]


state 63

    (16) expression -> expression MINUS expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . MODULUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . POWER expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LTE expression
    (23) expression -> expression . GT expression
    (24) expression -> expression . GTE expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . EQUALS expression
    (28) expression -> expression . NE expression

    PLUS            reduce using rule 16 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 16 (expression -> expression MINUS expression .)
    LT              reduce using rule 16 (expression -> expression MINUS expression .)
    LTE             reduce using rule 16 (expression -> expression MINUS expression .)
    GT              reduce using rule 16 (expression -> expression MINUS expression .)
    GTE             reduce using rule 16 (expression -> expression MINUS expression .)
    AND             reduce using rule 16 (expression -> expression MINUS expression .)
    OR              reduce using rule 16 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 16 (expression -> expression MINUS expression .)
    NE              reduce using rule 16 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 16 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 16 (expression -> expression MINUS expression .)
    LBRACE          reduce using rule 16 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 16 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 16 (expression -> expression MINUS expression .)
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    TIMES           shift and go to state 40
    POWER           shift and go to state 41

  ! DIVIDE          [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! MODULUS         [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! POWER           [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! LT              [ shift and go to state 42 ]
  ! LTE             [ shift and go to state 43 ]
  ! GT              [ shift and go to state 44 ]
  ! GTE             [ shift and go to state 45 ]
  ! AND             [ shift and go to state 46 ]
  ! OR              [ shift and go to state 47 ]
  ! EQUALS          [ shift and go to state 48 ]
  ! NE              [ shift and go to state 49 ]


state 64

    (17) expression -> expression DIVIDE expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . MODULUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . POWER expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LTE expression
    (23) expression -> expression . GT expression
    (24) expression -> expression . GTE expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . EQUALS expression
    (28) expression -> expression . NE expression

    PLUS            reduce using rule 17 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 17 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 17 (expression -> expression DIVIDE expression .)
    MODULUS         reduce using rule 17 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 17 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 17 (expression -> expression DIVIDE expression .)
    LTE             reduce using rule 17 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 17 (expression -> expression DIVIDE expression .)
    GTE             reduce using rule 17 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 17 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 17 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 17 (expression -> expression DIVIDE expression .)
    NE              reduce using rule 17 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 17 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 17 (expression -> expression DIVIDE expression .)
    LBRACE          reduce using rule 17 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 17 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 17 (expression -> expression DIVIDE expression .)
    POWER           shift and go to state 41

  ! POWER           [ reduce using rule 17 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! DIVIDE          [ shift and go to state 38 ]
  ! MODULUS         [ shift and go to state 39 ]
  ! TIMES           [ shift and go to state 40 ]
  ! LT              [ shift and go to state 42 ]
  ! LTE             [ shift and go to state 43 ]
  ! GT              [ shift and go to state 44 ]
  ! GTE             [ shift and go to state 45 ]
  ! AND             [ shift and go to state 46 ]
  ! OR              [ shift and go to state 47 ]
  ! EQUALS          [ shift and go to state 48 ]
  ! NE              [ shift and go to state 49 ]


state 65

    (18) expression -> expression MODULUS expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . MODULUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . POWER expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LTE expression
    (23) expression -> expression . GT expression
    (24) expression -> expression . GTE expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . EQUALS expression
    (28) expression -> expression . NE expression

    PLUS            reduce using rule 18 (expression -> expression MODULUS expression .)
    MINUS           reduce using rule 18 (expression -> expression MODULUS expression .)
    DIVIDE          reduce using rule 18 (expression -> expression MODULUS expression .)
    MODULUS         reduce using rule 18 (expression -> expression MODULUS expression .)
    TIMES           reduce using rule 18 (expression -> expression MODULUS expression .)
    LT              reduce using rule 18 (expression -> expression MODULUS expression .)
    LTE             reduce using rule 18 (expression -> expression MODULUS expression .)
    GT              reduce using rule 18 (expression -> expression MODULUS expression .)
    GTE             reduce using rule 18 (expression -> expression MODULUS expression .)
    AND             reduce using rule 18 (expression -> expression MODULUS expression .)
    OR              reduce using rule 18 (expression -> expression MODULUS expression .)
    EQUALS          reduce using rule 18 (expression -> expression MODULUS expression .)
    NE              reduce using rule 18 (expression -> expression MODULUS expression .)
    SEMICOLON       reduce using rule 18 (expression -> expression MODULUS expression .)
    RBRACE          reduce using rule 18 (expression -> expression MODULUS expression .)
    LBRACE          reduce using rule 18 (expression -> expression MODULUS expression .)
    RPAREN          reduce using rule 18 (expression -> expression MODULUS expression .)
    COMMA           reduce using rule 18 (expression -> expression MODULUS expression .)
    POWER           shift and go to state 41

  ! POWER           [ reduce using rule 18 (expression -> expression MODULUS expression .) ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! DIVIDE          [ shift and go to state 38 ]
  ! MODULUS         [ shift and go to state 39 ]
  ! TIMES           [ shift and go to state 40 ]
  ! LT              [ shift and go to state 42 ]
  ! LTE             [ shift and go to state 43 ]
  ! GT              [ shift and go to state 44 ]
  ! GTE             [ shift and go to state 45 ]
  ! AND             [ shift and go to state 46 ]
  ! OR              [ shift and go to state 47 ]
  ! EQUALS          [ shift and go to state 48 ]
  ! NE              [ shift and go to state 49 ]


state 66

    (19) expression -> expression TIMES expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . MODULUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . POWER expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LTE expression
    (23) expression -> expression . GT expression
    (24) expression -> expression . GTE expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . EQUALS expression
    (28) expression -> expression . NE expression

    PLUS            reduce using rule 19 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 19 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 19 (expression -> expression TIMES expression .)
    MODULUS         reduce using rule 19 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 19 (expression -> expression TIMES expression .)
    LT              reduce using rule 19 (expression -> expression TIMES expression .)
    LTE             reduce using rule 19 (expression -> expression TIMES expression .)
    GT              reduce using rule 19 (expression -> expression TIMES expression .)
    GTE             reduce using rule 19 (expression -> expression TIMES expression .)
    AND             reduce using rule 19 (expression -> expression TIMES expression .)
    OR              reduce using rule 19 (expression -> expression TIMES expression .)
    EQUALS          reduce using rule 19 (expression -> expression TIMES expression .)
    NE              reduce using rule 19 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 19 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 19 (expression -> expression TIMES expression .)
    LBRACE          reduce using rule 19 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 19 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 19 (expression -> expression TIMES expression .)
    POWER           shift and go to state 41

  ! POWER           [ reduce using rule 19 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! DIVIDE          [ shift and go to state 38 ]
  ! MODULUS         [ shift and go to state 39 ]
  ! TIMES           [ shift and go to state 40 ]
  ! LT              [ shift and go to state 42 ]
  ! LTE             [ shift and go to state 43 ]
  ! GT              [ shift and go to state 44 ]
  ! GTE             [ shift and go to state 45 ]
  ! AND             [ shift and go to state 46 ]
  ! OR              [ shift and go to state 47 ]
  ! EQUALS          [ shift and go to state 48 ]
  ! NE              [ shift and go to state 49 ]


state 67

    (20) expression -> expression POWER expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . MODULUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . POWER expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LTE expression
    (23) expression -> expression . GT expression
    (24) expression -> expression . GTE expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . EQUALS expression
    (28) expression -> expression . NE expression

    PLUS            reduce using rule 20 (expression -> expression POWER expression .)
    MINUS           reduce using rule 20 (expression -> expression POWER expression .)
    DIVIDE          reduce using rule 20 (expression -> expression POWER expression .)
    MODULUS         reduce using rule 20 (expression -> expression POWER expression .)
    TIMES           reduce using rule 20 (expression -> expression POWER expression .)
    LT              reduce using rule 20 (expression -> expression POWER expression .)
    LTE             reduce using rule 20 (expression -> expression POWER expression .)
    GT              reduce using rule 20 (expression -> expression POWER expression .)
    GTE             reduce using rule 20 (expression -> expression POWER expression .)
    AND             reduce using rule 20 (expression -> expression POWER expression .)
    OR              reduce using rule 20 (expression -> expression POWER expression .)
    EQUALS          reduce using rule 20 (expression -> expression POWER expression .)
    NE              reduce using rule 20 (expression -> expression POWER expression .)
    SEMICOLON       reduce using rule 20 (expression -> expression POWER expression .)
    RBRACE          reduce using rule 20 (expression -> expression POWER expression .)
    LBRACE          reduce using rule 20 (expression -> expression POWER expression .)
    RPAREN          reduce using rule 20 (expression -> expression POWER expression .)
    COMMA           reduce using rule 20 (expression -> expression POWER expression .)
    POWER           shift and go to state 41

  ! POWER           [ reduce using rule 20 (expression -> expression POWER expression .) ]
  ! PLUS            [ shift and go to state 36 ]
  ! MINUS           [ shift and go to state 37 ]
  ! DIVIDE          [ shift and go to state 38 ]
  ! MODULUS         [ shift and go to state 39 ]
  ! TIMES           [ shift and go to state 40 ]
  ! LT              [ shift and go to state 42 ]
  ! LTE             [ shift and go to state 43 ]
  ! GT              [ shift and go to state 44 ]
  ! GTE             [ shift and go to state 45 ]
  ! AND             [ shift and go to state 46 ]
  ! OR              [ shift and go to state 47 ]
  ! EQUALS          [ shift and go to state 48 ]
  ! NE              [ shift and go to state 49 ]


state 68

    (21) expression -> expression LT expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . MODULUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . POWER expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LTE expression
    (23) expression -> expression . GT expression
    (24) expression -> expression . GTE expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . EQUALS expression
    (28) expression -> expression . NE expression

    LT              reduce using rule 21 (expression -> expression LT expression .)
    LTE             reduce using rule 21 (expression -> expression LT expression .)
    GT              reduce using rule 21 (expression -> expression LT expression .)
    GTE             reduce using rule 21 (expression -> expression LT expression .)
    AND             reduce using rule 21 (expression -> expression LT expression .)
    OR              reduce using rule 21 (expression -> expression LT expression .)
    EQUALS          reduce using rule 21 (expression -> expression LT expression .)
    NE              reduce using rule 21 (expression -> expression LT expression .)
    SEMICOLON       reduce using rule 21 (expression -> expression LT expression .)
    RBRACE          reduce using rule 21 (expression -> expression LT expression .)
    LBRACE          reduce using rule 21 (expression -> expression LT expression .)
    RPAREN          reduce using rule 21 (expression -> expression LT expression .)
    COMMA           reduce using rule 21 (expression -> expression LT expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    TIMES           shift and go to state 40
    POWER           shift and go to state 41

  ! PLUS            [ reduce using rule 21 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression LT expression .) ]
  ! MODULUS         [ reduce using rule 21 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 21 (expression -> expression LT expression .) ]
  ! POWER           [ reduce using rule 21 (expression -> expression LT expression .) ]
  ! LT              [ shift and go to state 42 ]
  ! LTE             [ shift and go to state 43 ]
  ! GT              [ shift and go to state 44 ]
  ! GTE             [ shift and go to state 45 ]
  ! AND             [ shift and go to state 46 ]
  ! OR              [ shift and go to state 47 ]
  ! EQUALS          [ shift and go to state 48 ]
  ! NE              [ shift and go to state 49 ]


state 69

    (22) expression -> expression LTE expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . MODULUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . POWER expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LTE expression
    (23) expression -> expression . GT expression
    (24) expression -> expression . GTE expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . EQUALS expression
    (28) expression -> expression . NE expression

    LT              reduce using rule 22 (expression -> expression LTE expression .)
    LTE             reduce using rule 22 (expression -> expression LTE expression .)
    GT              reduce using rule 22 (expression -> expression LTE expression .)
    GTE             reduce using rule 22 (expression -> expression LTE expression .)
    AND             reduce using rule 22 (expression -> expression LTE expression .)
    OR              reduce using rule 22 (expression -> expression LTE expression .)
    EQUALS          reduce using rule 22 (expression -> expression LTE expression .)
    NE              reduce using rule 22 (expression -> expression LTE expression .)
    SEMICOLON       reduce using rule 22 (expression -> expression LTE expression .)
    RBRACE          reduce using rule 22 (expression -> expression LTE expression .)
    LBRACE          reduce using rule 22 (expression -> expression LTE expression .)
    RPAREN          reduce using rule 22 (expression -> expression LTE expression .)
    COMMA           reduce using rule 22 (expression -> expression LTE expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    TIMES           shift and go to state 40
    POWER           shift and go to state 41

  ! PLUS            [ reduce using rule 22 (expression -> expression LTE expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> expression LTE expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression LTE expression .) ]
  ! MODULUS         [ reduce using rule 22 (expression -> expression LTE expression .) ]
  ! TIMES           [ reduce using rule 22 (expression -> expression LTE expression .) ]
  ! POWER           [ reduce using rule 22 (expression -> expression LTE expression .) ]
  ! LT              [ shift and go to state 42 ]
  ! LTE             [ shift and go to state 43 ]
  ! GT              [ shift and go to state 44 ]
  ! GTE             [ shift and go to state 45 ]
  ! AND             [ shift and go to state 46 ]
  ! OR              [ shift and go to state 47 ]
  ! EQUALS          [ shift and go to state 48 ]
  ! NE              [ shift and go to state 49 ]


state 70

    (23) expression -> expression GT expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . MODULUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . POWER expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LTE expression
    (23) expression -> expression . GT expression
    (24) expression -> expression . GTE expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . EQUALS expression
    (28) expression -> expression . NE expression

    LT              reduce using rule 23 (expression -> expression GT expression .)
    LTE             reduce using rule 23 (expression -> expression GT expression .)
    GT              reduce using rule 23 (expression -> expression GT expression .)
    GTE             reduce using rule 23 (expression -> expression GT expression .)
    AND             reduce using rule 23 (expression -> expression GT expression .)
    OR              reduce using rule 23 (expression -> expression GT expression .)
    EQUALS          reduce using rule 23 (expression -> expression GT expression .)
    NE              reduce using rule 23 (expression -> expression GT expression .)
    SEMICOLON       reduce using rule 23 (expression -> expression GT expression .)
    RBRACE          reduce using rule 23 (expression -> expression GT expression .)
    LBRACE          reduce using rule 23 (expression -> expression GT expression .)
    RPAREN          reduce using rule 23 (expression -> expression GT expression .)
    COMMA           reduce using rule 23 (expression -> expression GT expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    TIMES           shift and go to state 40
    POWER           shift and go to state 41

  ! PLUS            [ reduce using rule 23 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 23 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression GT expression .) ]
  ! MODULUS         [ reduce using rule 23 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 23 (expression -> expression GT expression .) ]
  ! POWER           [ reduce using rule 23 (expression -> expression GT expression .) ]
  ! LT              [ shift and go to state 42 ]
  ! LTE             [ shift and go to state 43 ]
  ! GT              [ shift and go to state 44 ]
  ! GTE             [ shift and go to state 45 ]
  ! AND             [ shift and go to state 46 ]
  ! OR              [ shift and go to state 47 ]
  ! EQUALS          [ shift and go to state 48 ]
  ! NE              [ shift and go to state 49 ]


state 71

    (24) expression -> expression GTE expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . MODULUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . POWER expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LTE expression
    (23) expression -> expression . GT expression
    (24) expression -> expression . GTE expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . EQUALS expression
    (28) expression -> expression . NE expression

    LT              reduce using rule 24 (expression -> expression GTE expression .)
    LTE             reduce using rule 24 (expression -> expression GTE expression .)
    GT              reduce using rule 24 (expression -> expression GTE expression .)
    GTE             reduce using rule 24 (expression -> expression GTE expression .)
    AND             reduce using rule 24 (expression -> expression GTE expression .)
    OR              reduce using rule 24 (expression -> expression GTE expression .)
    EQUALS          reduce using rule 24 (expression -> expression GTE expression .)
    NE              reduce using rule 24 (expression -> expression GTE expression .)
    SEMICOLON       reduce using rule 24 (expression -> expression GTE expression .)
    RBRACE          reduce using rule 24 (expression -> expression GTE expression .)
    LBRACE          reduce using rule 24 (expression -> expression GTE expression .)
    RPAREN          reduce using rule 24 (expression -> expression GTE expression .)
    COMMA           reduce using rule 24 (expression -> expression GTE expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    TIMES           shift and go to state 40
    POWER           shift and go to state 41

  ! PLUS            [ reduce using rule 24 (expression -> expression GTE expression .) ]
  ! MINUS           [ reduce using rule 24 (expression -> expression GTE expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression GTE expression .) ]
  ! MODULUS         [ reduce using rule 24 (expression -> expression GTE expression .) ]
  ! TIMES           [ reduce using rule 24 (expression -> expression GTE expression .) ]
  ! POWER           [ reduce using rule 24 (expression -> expression GTE expression .) ]
  ! LT              [ shift and go to state 42 ]
  ! LTE             [ shift and go to state 43 ]
  ! GT              [ shift and go to state 44 ]
  ! GTE             [ shift and go to state 45 ]
  ! AND             [ shift and go to state 46 ]
  ! OR              [ shift and go to state 47 ]
  ! EQUALS          [ shift and go to state 48 ]
  ! NE              [ shift and go to state 49 ]


state 72

    (25) expression -> expression AND expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . MODULUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . POWER expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LTE expression
    (23) expression -> expression . GT expression
    (24) expression -> expression . GTE expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . EQUALS expression
    (28) expression -> expression . NE expression

    AND             reduce using rule 25 (expression -> expression AND expression .)
    OR              reduce using rule 25 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 25 (expression -> expression AND expression .)
    RBRACE          reduce using rule 25 (expression -> expression AND expression .)
    LBRACE          reduce using rule 25 (expression -> expression AND expression .)
    RPAREN          reduce using rule 25 (expression -> expression AND expression .)
    COMMA           reduce using rule 25 (expression -> expression AND expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    TIMES           shift and go to state 40
    POWER           shift and go to state 41
    LT              shift and go to state 42
    LTE             shift and go to state 43
    GT              shift and go to state 44
    GTE             shift and go to state 45
    EQUALS          shift and go to state 48
    NE              shift and go to state 49

  ! PLUS            [ reduce using rule 25 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 25 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression AND expression .) ]
  ! MODULUS         [ reduce using rule 25 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 25 (expression -> expression AND expression .) ]
  ! POWER           [ reduce using rule 25 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 25 (expression -> expression AND expression .) ]
  ! LTE             [ reduce using rule 25 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 25 (expression -> expression AND expression .) ]
  ! GTE             [ reduce using rule 25 (expression -> expression AND expression .) ]
  ! EQUALS          [ reduce using rule 25 (expression -> expression AND expression .) ]
  ! NE              [ reduce using rule 25 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 46 ]
  ! OR              [ shift and go to state 47 ]


state 73

    (26) expression -> expression OR expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . MODULUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . POWER expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LTE expression
    (23) expression -> expression . GT expression
    (24) expression -> expression . GTE expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . EQUALS expression
    (28) expression -> expression . NE expression

    OR              reduce using rule 26 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 26 (expression -> expression OR expression .)
    RBRACE          reduce using rule 26 (expression -> expression OR expression .)
    LBRACE          reduce using rule 26 (expression -> expression OR expression .)
    RPAREN          reduce using rule 26 (expression -> expression OR expression .)
    COMMA           reduce using rule 26 (expression -> expression OR expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    TIMES           shift and go to state 40
    POWER           shift and go to state 41
    LT              shift and go to state 42
    LTE             shift and go to state 43
    GT              shift and go to state 44
    GTE             shift and go to state 45
    AND             shift and go to state 46
    EQUALS          shift and go to state 48
    NE              shift and go to state 49

  ! PLUS            [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! MODULUS         [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! POWER           [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! LTE             [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! GTE             [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! EQUALS          [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! NE              [ reduce using rule 26 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 47 ]


state 74

    (27) expression -> expression EQUALS expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . MODULUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . POWER expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LTE expression
    (23) expression -> expression . GT expression
    (24) expression -> expression . GTE expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . EQUALS expression
    (28) expression -> expression . NE expression

    AND             reduce using rule 27 (expression -> expression EQUALS expression .)
    OR              reduce using rule 27 (expression -> expression EQUALS expression .)
    EQUALS          reduce using rule 27 (expression -> expression EQUALS expression .)
    NE              reduce using rule 27 (expression -> expression EQUALS expression .)
    SEMICOLON       reduce using rule 27 (expression -> expression EQUALS expression .)
    RBRACE          reduce using rule 27 (expression -> expression EQUALS expression .)
    LBRACE          reduce using rule 27 (expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 27 (expression -> expression EQUALS expression .)
    COMMA           reduce using rule 27 (expression -> expression EQUALS expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    TIMES           shift and go to state 40
    POWER           shift and go to state 41
    LT              shift and go to state 42
    LTE             shift and go to state 43
    GT              shift and go to state 44
    GTE             shift and go to state 45

  ! PLUS            [ reduce using rule 27 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression EQUALS expression .) ]
  ! MODULUS         [ reduce using rule 27 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 27 (expression -> expression EQUALS expression .) ]
  ! POWER           [ reduce using rule 27 (expression -> expression EQUALS expression .) ]
  ! LT              [ reduce using rule 27 (expression -> expression EQUALS expression .) ]
  ! LTE             [ reduce using rule 27 (expression -> expression EQUALS expression .) ]
  ! GT              [ reduce using rule 27 (expression -> expression EQUALS expression .) ]
  ! GTE             [ reduce using rule 27 (expression -> expression EQUALS expression .) ]
  ! AND             [ shift and go to state 46 ]
  ! OR              [ shift and go to state 47 ]
  ! EQUALS          [ shift and go to state 48 ]
  ! NE              [ shift and go to state 49 ]


state 75

    (28) expression -> expression NE expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . MODULUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . POWER expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LTE expression
    (23) expression -> expression . GT expression
    (24) expression -> expression . GTE expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . EQUALS expression
    (28) expression -> expression . NE expression

    AND             reduce using rule 28 (expression -> expression NE expression .)
    OR              reduce using rule 28 (expression -> expression NE expression .)
    EQUALS          reduce using rule 28 (expression -> expression NE expression .)
    NE              reduce using rule 28 (expression -> expression NE expression .)
    SEMICOLON       reduce using rule 28 (expression -> expression NE expression .)
    RBRACE          reduce using rule 28 (expression -> expression NE expression .)
    LBRACE          reduce using rule 28 (expression -> expression NE expression .)
    RPAREN          reduce using rule 28 (expression -> expression NE expression .)
    COMMA           reduce using rule 28 (expression -> expression NE expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    TIMES           shift and go to state 40
    POWER           shift and go to state 41
    LT              shift and go to state 42
    LTE             shift and go to state 43
    GT              shift and go to state 44
    GTE             shift and go to state 45

  ! PLUS            [ reduce using rule 28 (expression -> expression NE expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression NE expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression NE expression .) ]
  ! MODULUS         [ reduce using rule 28 (expression -> expression NE expression .) ]
  ! TIMES           [ reduce using rule 28 (expression -> expression NE expression .) ]
  ! POWER           [ reduce using rule 28 (expression -> expression NE expression .) ]
  ! LT              [ reduce using rule 28 (expression -> expression NE expression .) ]
  ! LTE             [ reduce using rule 28 (expression -> expression NE expression .) ]
  ! GT              [ reduce using rule 28 (expression -> expression NE expression .) ]
  ! GTE             [ reduce using rule 28 (expression -> expression NE expression .) ]
  ! AND             [ shift and go to state 46 ]
  ! OR              [ shift and go to state 47 ]
  ! EQUALS          [ shift and go to state 48 ]
  ! NE              [ shift and go to state 49 ]


state 76

    (47) if_stmt -> IF expression block_stmt . else_opt
    (48) else_opt -> . epsilon
    (49) else_opt -> . ELSE block_stmt
    (60) epsilon -> .

    ELSE            shift and go to state 91
    SEMICOLON       reduce using rule 60 (epsilon -> .)
    RBRACE          reduce using rule 60 (epsilon -> .)

    else_opt                       shift and go to state 89
    epsilon                        shift and go to state 90

state 77

    (50) read_stmt -> READ LPAREN lvalue_list . RPAREN

    RPAREN          shift and go to state 92


state 78

    (51) lvalue_list -> lvalue_more . lvalue
    (53) lvalue_more -> lvalue_more . lvalue COMMA
    (14) lvalue -> . identifier
    (13) identifier -> . ID

    ID              shift and go to state 24

    lvalue                         shift and go to state 93
    identifier                     shift and go to state 51

state 79

    (52) lvalue_more -> epsilon .

    ID              reduce using rule 52 (lvalue_more -> epsilon .)


state 80

    (33) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 33 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 33 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 33 (expression -> LPAREN expression RPAREN .)
    MODULUS         reduce using rule 33 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 33 (expression -> LPAREN expression RPAREN .)
    POWER           reduce using rule 33 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 33 (expression -> LPAREN expression RPAREN .)
    LTE             reduce using rule 33 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 33 (expression -> LPAREN expression RPAREN .)
    GTE             reduce using rule 33 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 33 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 33 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 33 (expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 33 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 33 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 33 (expression -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 33 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 33 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 33 (expression -> LPAREN expression RPAREN .)


state 81

    (54) while_stmt -> WHILE expression block_stmt .

    SEMICOLON       reduce using rule 54 (while_stmt -> WHILE expression block_stmt .)
    RBRACE          reduce using rule 54 (while_stmt -> WHILE expression block_stmt .)


state 82

    (55) write_stmt -> WRITE LPAREN expr_string_list . RPAREN

    RPAREN          shift and go to state 94


state 83

    (56) expr_string_list -> epsilon .
    (58) expr_string_more -> epsilon .

    RPAREN          reduce using rule 56 (expr_string_list -> epsilon .)
    MINUS           reduce using rule 58 (expr_string_more -> epsilon .)
    PLUS            reduce using rule 58 (expr_string_more -> epsilon .)
    NOT             reduce using rule 58 (expr_string_more -> epsilon .)
    LPAREN          reduce using rule 58 (expr_string_more -> epsilon .)
    STRING_LITERAL  reduce using rule 58 (expr_string_more -> epsilon .)
    INT_LITERAL     reduce using rule 58 (expr_string_more -> epsilon .)
    ID              reduce using rule 58 (expr_string_more -> epsilon .)


state 84

    (57) expr_string_list -> expr_string_more . expression
    (59) expr_string_more -> expr_string_more . expression COMMA
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression POWER expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LTE expression
    (23) expression -> . expression GT expression
    (24) expression -> . expression GTE expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression EQUALS expression
    (28) expression -> . expression NE expression
    (29) expression -> . lvalue ASSIGN expression
    (30) expression -> . MINUS expression
    (31) expression -> . PLUS expression
    (32) expression -> . NOT expression
    (33) expression -> . LPAREN expression RPAREN
    (36) expression -> . literal
    (37) expression -> . lvalue
    (14) lvalue -> . identifier
    (34) literal -> . STRING_LITERAL
    (35) literal -> . INT_LITERAL
    (13) identifier -> . ID

    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    NOT             shift and go to state 28
    LPAREN          shift and go to state 21
    STRING_LITERAL  shift and go to state 30
    INT_LITERAL     shift and go to state 31
    ID              shift and go to state 24

    expression                     shift and go to state 95
    lvalue                         shift and go to state 27
    literal                        shift and go to state 29
    identifier                     shift and go to state 51

state 85

    (29) expression -> lvalue ASSIGN expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . MODULUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . POWER expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LTE expression
    (23) expression -> expression . GT expression
    (24) expression -> expression . GTE expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . EQUALS expression
    (28) expression -> expression . NE expression

    SEMICOLON       reduce using rule 29 (expression -> lvalue ASSIGN expression .)
    RBRACE          reduce using rule 29 (expression -> lvalue ASSIGN expression .)
    LBRACE          reduce using rule 29 (expression -> lvalue ASSIGN expression .)
    RPAREN          reduce using rule 29 (expression -> lvalue ASSIGN expression .)
    COMMA           reduce using rule 29 (expression -> lvalue ASSIGN expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    TIMES           shift and go to state 40
    POWER           shift and go to state 41
    LT              shift and go to state 42
    LTE             shift and go to state 43
    GT              shift and go to state 44
    GTE             shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47
    EQUALS          shift and go to state 48
    NE              shift and go to state 49

  ! PLUS            [ reduce using rule 29 (expression -> lvalue ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> lvalue ASSIGN expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> lvalue ASSIGN expression .) ]
  ! MODULUS         [ reduce using rule 29 (expression -> lvalue ASSIGN expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> lvalue ASSIGN expression .) ]
  ! POWER           [ reduce using rule 29 (expression -> lvalue ASSIGN expression .) ]
  ! LT              [ reduce using rule 29 (expression -> lvalue ASSIGN expression .) ]
  ! LTE             [ reduce using rule 29 (expression -> lvalue ASSIGN expression .) ]
  ! GT              [ reduce using rule 29 (expression -> lvalue ASSIGN expression .) ]
  ! GTE             [ reduce using rule 29 (expression -> lvalue ASSIGN expression .) ]
  ! AND             [ reduce using rule 29 (expression -> lvalue ASSIGN expression .) ]
  ! OR              [ reduce using rule 29 (expression -> lvalue ASSIGN expression .) ]
  ! EQUALS          [ reduce using rule 29 (expression -> lvalue ASSIGN expression .) ]
  ! NE              [ reduce using rule 29 (expression -> lvalue ASSIGN expression .) ]


state 86

    (11) decleration -> identifier COLON type assignment_opt .

    SEMICOLON       reduce using rule 11 (decleration -> identifier COLON type assignment_opt .)
    RBRACE          reduce using rule 11 (decleration -> identifier COLON type assignment_opt .)


state 87

    (38) assignment_opt -> epsilon .

    SEMICOLON       reduce using rule 38 (assignment_opt -> epsilon .)
    RBRACE          reduce using rule 38 (assignment_opt -> epsilon .)


state 88

    (39) assignment_opt -> ASSIGN . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . expression MODULUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression POWER expression
    (21) expression -> . expression LT expression
    (22) expression -> . expression LTE expression
    (23) expression -> . expression GT expression
    (24) expression -> . expression GTE expression
    (25) expression -> . expression AND expression
    (26) expression -> . expression OR expression
    (27) expression -> . expression EQUALS expression
    (28) expression -> . expression NE expression
    (29) expression -> . lvalue ASSIGN expression
    (30) expression -> . MINUS expression
    (31) expression -> . PLUS expression
    (32) expression -> . NOT expression
    (33) expression -> . LPAREN expression RPAREN
    (36) expression -> . literal
    (37) expression -> . lvalue
    (14) lvalue -> . identifier
    (34) literal -> . STRING_LITERAL
    (35) literal -> . INT_LITERAL
    (13) identifier -> . ID

    MINUS           shift and go to state 26
    PLUS            shift and go to state 25
    NOT             shift and go to state 28
    LPAREN          shift and go to state 21
    STRING_LITERAL  shift and go to state 30
    INT_LITERAL     shift and go to state 31
    ID              shift and go to state 24

    expression                     shift and go to state 96
    lvalue                         shift and go to state 27
    literal                        shift and go to state 29
    identifier                     shift and go to state 51

state 89

    (47) if_stmt -> IF expression block_stmt else_opt .

    SEMICOLON       reduce using rule 47 (if_stmt -> IF expression block_stmt else_opt .)
    RBRACE          reduce using rule 47 (if_stmt -> IF expression block_stmt else_opt .)


state 90

    (48) else_opt -> epsilon .

    SEMICOLON       reduce using rule 48 (else_opt -> epsilon .)
    RBRACE          reduce using rule 48 (else_opt -> epsilon .)


state 91

    (49) else_opt -> ELSE . block_stmt
    (2) block_stmt -> . LBRACE stmt_decl_list RBRACE

    LBRACE          shift and go to state 3

    block_stmt                     shift and go to state 97

state 92

    (50) read_stmt -> READ LPAREN lvalue_list RPAREN .

    SEMICOLON       reduce using rule 50 (read_stmt -> READ LPAREN lvalue_list RPAREN .)
    RBRACE          reduce using rule 50 (read_stmt -> READ LPAREN lvalue_list RPAREN .)


state 93

    (51) lvalue_list -> lvalue_more lvalue .
    (53) lvalue_more -> lvalue_more lvalue . COMMA

    RPAREN          reduce using rule 51 (lvalue_list -> lvalue_more lvalue .)
    COMMA           shift and go to state 98


state 94

    (55) write_stmt -> WRITE LPAREN expr_string_list RPAREN .

    SEMICOLON       reduce using rule 55 (write_stmt -> WRITE LPAREN expr_string_list RPAREN .)
    RBRACE          reduce using rule 55 (write_stmt -> WRITE LPAREN expr_string_list RPAREN .)


state 95

    (57) expr_string_list -> expr_string_more expression .
    (59) expr_string_more -> expr_string_more expression . COMMA
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . MODULUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . POWER expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LTE expression
    (23) expression -> expression . GT expression
    (24) expression -> expression . GTE expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . EQUALS expression
    (28) expression -> expression . NE expression

    RPAREN          reduce using rule 57 (expr_string_list -> expr_string_more expression .)
    COMMA           shift and go to state 99
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    TIMES           shift and go to state 40
    POWER           shift and go to state 41
    LT              shift and go to state 42
    LTE             shift and go to state 43
    GT              shift and go to state 44
    GTE             shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47
    EQUALS          shift and go to state 48
    NE              shift and go to state 49


state 96

    (39) assignment_opt -> ASSIGN expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . DIVIDE expression
    (18) expression -> expression . MODULUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . POWER expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . LTE expression
    (23) expression -> expression . GT expression
    (24) expression -> expression . GTE expression
    (25) expression -> expression . AND expression
    (26) expression -> expression . OR expression
    (27) expression -> expression . EQUALS expression
    (28) expression -> expression . NE expression

    SEMICOLON       reduce using rule 39 (assignment_opt -> ASSIGN expression .)
    RBRACE          reduce using rule 39 (assignment_opt -> ASSIGN expression .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULUS         shift and go to state 39
    TIMES           shift and go to state 40
    POWER           shift and go to state 41
    LT              shift and go to state 42
    LTE             shift and go to state 43
    GT              shift and go to state 44
    GTE             shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47
    EQUALS          shift and go to state 48
    NE              shift and go to state 49


state 97

    (49) else_opt -> ELSE block_stmt .

    SEMICOLON       reduce using rule 49 (else_opt -> ELSE block_stmt .)
    RBRACE          reduce using rule 49 (else_opt -> ELSE block_stmt .)


state 98

    (53) lvalue_more -> lvalue_more lvalue COMMA .

    ID              reduce using rule 53 (lvalue_more -> lvalue_more lvalue COMMA .)


state 99

    (59) expr_string_more -> expr_string_more expression COMMA .

    MINUS           reduce using rule 59 (expr_string_more -> expr_string_more expression COMMA .)
    PLUS            reduce using rule 59 (expr_string_more -> expr_string_more expression COMMA .)
    NOT             reduce using rule 59 (expr_string_more -> expr_string_more expression COMMA .)
    LPAREN          reduce using rule 59 (expr_string_more -> expr_string_more expression COMMA .)
    STRING_LITERAL  reduce using rule 59 (expr_string_more -> expr_string_more expression COMMA .)
    INT_LITERAL     reduce using rule 59 (expr_string_more -> expr_string_more expression COMMA .)
    ID              reduce using rule 59 (expr_string_more -> expr_string_more expression COMMA .)

